plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
}

group = 'com.sugang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.8.7'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'

    // DB
    implementation 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'


    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: '2.7.5'
    implementation group: 'com.google.guava', name: 'guava', version: '11.0.2'

    testImplementation "org.testcontainers:testcontainers:1.17.5"
    testImplementation "org.testcontainers:junit-jupiter:1.17.5"
    testImplementation "org.testcontainers:mysql:1.17.5"
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}
